package works_2;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        System.out.println("<-------第一题------->");
        //TODO:在此编写第一题测试代码
        Monkey monkey = new Monkey("猴子");
        People people = new People("小明");

        System.out.println(monkey.name+"说：");
        monkey.speak();

        System.out.println(people.name+"说：");
        people.speak();
        System.out.println(people.name+"想：");
        people.think();
        System.out.println("<-------第二题------->");
        //TODO:在此编写第二题测试代码
        works_2.two.Vehicle v1 = new works_2.two.Car(4, 1150.0, 3);
        v1.show();
        System.out.println("-----------------------");

        works_2.two.Vehicle v2 = new works_2.two.Truck(6, 15000.0, 1, 3000.0);
        v2.show();
        System.out.println();

        works_2.two.Vehicle v3 = new works_2.two.Car(4, 1150.0, 6);
        v3.show();
        System.out.println("-----------------------");

        works_2.two.Vehicle v4 = new works_2.two.Truck(6, 15000.0, 1, 7000.0);
        v4.show();
        System.out.println("<-------第三题------->");
        //TODO:在此编写第三题测试代码
        Scanner sc = new Scanner(System.in);
        String a = sc.next();
        String b = sc.next();
        System.out.println("c=" + getSum(a, b));
        System.out.println("<-------第四题------->");
        //TODO:在此编写第四题测试代码
        int m = sc.nextInt();
        int n = sc.nextInt();
        System.out.println(CountRoads(m,n));
        System.out.println("<-------第五题------->");
        //TODO:在此编写第五题测试代码
        String[] strs={"f1ower","f1ow","f1ight"};
        System.out.println(maxHead(strs));
    }
    public static String getSum(String a, String b) {
        List<Integer> la = new ArrayList<Integer>();
        List<Integer> lb = new ArrayList<Integer>();
        String c = "";
        for (int i = a.length() - 1; i >= 0; --i) {
            la.add(a.charAt(i) - '0');
        }
        for (int i = b.length() - 1; i >= 0; --i) {
            lb.add(b.charAt(i) - '0');
        }
        //TODO:在此处编写符合要求的代码，并在主类中编写测试代码
        int x = 0, y = 0;
        int i, j;
        for (i = 0, j = 0; i < la.size() && j < lb.size(); i++, j++) {
            int num = la.get(i) + lb.get(j);
            x = num % 10;
            c = (x + y) + c;
            y = num / 10;
        }
        if (y == 1 && la.size() == lb.size()) c = y + c;
        while (i < la.size()) {
            c = (la.get(i) + y) + c;
            i++;
        }
        while (j < lb.size()) {
            c = (lb.get(j) + y) + c;
            j++;
        }
        return c;
    }
    private static int CountRoads(int m, int n) {
        int[][] dp = new int[m][n];
        for (int i = 0; i < n; i++) {
            dp[0][i] = 1;
        }
        for (int i = 0; i < m; i++) {
            dp[i][0] = 1;
        }
        for (int i = 1; i < m; i++) {
            for (int j = 1; j < n; j++) {
                dp[i][j] = dp[i-1][j] + dp[i][j-1];
            }
        }
        return dp[m-1][n-1];
    }
    private static String maxHead(String[] strs) {
        if (strs == null || strs.length == 0) {
            return "";
        }

        int length = strs[0].length();

        for (int i = 0; i < length; i++) {
            char c = strs[0].charAt(i);
            for (int j = 1; j < strs.length; j++) {
                if (i == strs[j].length() || strs[j].charAt(i) != c) {
                    return strs[0].substring(0, i);
                }
            }
        }
        return strs[0];
    }
}
class Monkey {
    protected String name;

    public Monkey(String name) {
        this.name = name;
    }

    public void speak() {
        System.out.println("咿咿呀呀......");
    }
}
class People extends Monkey {
    public People(String name) {
        super(name);
    }

    public void speak() {
        System.out.println("小样儿，不错嘛！会说话了！");
    }

    public void think() {
        System.out.println("别说话！认真思考！");
    }
}
class Vehicle {
    protected int wheels; // 车轮个数
    protected double weight; // 车重

    // 构造方法
    public Vehicle(int wheels, double weight) {
        this.wheels = wheels;
        this.weight = weight;
    }

    // 输出车轮个数和车重信息
    public void show() {
        System.out.println("车轮的个数是：" + wheels + "，车重：" + weight);
    }
}
class Car extends Vehicle {
    private int loader; // 载人数

    // 构造方法
    public Car(int wheels, double weight, int loader) {
        super(wheels, weight);
        this.loader = loader;
    }

    // 输出车辆信息和实载人数
    public void show() {
        super.show();
        System.out.println("这是一辆小车能载" + 6 + "人，实载" + loader + "人");

        // 判断是否超载
        if (loader > 5) {
            System.out.println("你超员了! ! !");
        }
    }
}
class Truck extends Vehicle {
    private int loader; // 载人数
    private double payload; // 载重量

    // 构造方法
    public Truck(int wheels, double weight, int loader, double payload) {
        super(wheels, weight);
        this.loader = loader;
        this.payload = payload;
    }

    // 输出车辆信息和实载人数、载重量
    public void show() {
        super.show();
        System.out.println("这是一辆卡车能载" + 3 + "人，实载" + loader + "人");
        System.out.println("这是一辆卡车,核载" + 5000 + "kg,你已装载" + payload + "kg");

        // 判断是否超载
        if (payload > 5000) {
            System.out.println("你超载了! ! !");
        }
    }
}
